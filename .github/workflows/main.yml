name: gsheet.action test
on: [push]
#   pull_request:
#     types: [opened, reopened, edited]

jobs:
  job0:
    runs-on: ubuntu-latest
    outputs:
      output_test_number: ${{ steps.step1.outputs.id }}
    steps:
      - id: step1
        run: |
          cd seminar02
          i=$(python3 checker.py)
          echo "$i"
          echo "::set-output name=id::$i"
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output_id: ${{ steps.step1.outputs.id }}
    steps:
      - uses: actions/checkout@v1
      - id: step1
        run: echo "::set-output name=id::\"$(git log -1 --pretty=format:'%an')\""
  job2:
    runs-on: ubuntu-latest
    needs: [job0, job1]
    outputs:
      output_id_number: ${{ steps.step1.outputs.id }}
    steps:
      - id: 'get_worksheet'
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: ${{secrets.SPREADSHEET_ID}}
          commands: | # list of commands, specified as a valid JSON string
            [
              { "command": "getData", "args": { "worksheetTitle": "Sheet1", "minCol": 1, "maxCol": 1 } }
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.SERVICE_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.SERVICE_KEY }}
      - id: step1
        name: dump results
        env:
          #  the output of the action can be found in ${{ steps.update_worksheet.outputs.results }}
          RESULTS: ${{ steps.get_worksheet.outputs.results }}
        run: |
          cmd=$(echo "${RESULTS}" | jq ".results[0].result.rawData")
          gitid=\"${{needs.job1.outputs.output_id}}\"
          for i in {1..60}
          test_succ=${{needs.job0.outputs.output_test_number}}
          echo "succ tests:"
          echo "$test_succ"
          do
            t=$(echo "${cmd}" | jq ".[$i][0]")
            echo "$t"
            echo "$gitid"
            if [ "$t" = "$gitid" ]; then
              echo "FOUND"
              echo "$i"
              j="[{ \"command\": \"updateData\", \"args\": {\"worksheetTitle\": \"Sheet1\", \"data\": [[\"$(test_succ)\"]], \"minCol\": 2, \"minRow\": $((i+1)) }} ]"
              echo "$j"
              echo "::set-output name=id::$j"
            else
              echo "Strings are not equal."
            fi
          done
          echo "$gitid"
#        echo "::set-output name=id::$i"
  job3:
    runs-on: ubuntu-latest
    needs: job2
    steps:
      - id: 'update_worksheet'
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: ${{secrets.SPREADSHEET_ID}}
          commands: ${{needs.job2.outputs.output_id_number}}
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.SERVICE_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.SERVICE_KEY }}
